# Configuración para el mapeo de schemas JSON a DDL SQL
# Este archivo contiene los valores que antes estaban hardcodeados en schema_mapper.py

# Configuración de tipos de datos por motor de base de datos
type_mappings:
  postgresql:
    string: "VARCHAR(255)"
    string_text: "TEXT"
    string_datetime: "TIMESTAMP"
    number: "DECIMAL(15,2)"
    integer: "INTEGER"
    boolean: "BOOLEAN"
    array: "JSONB"
    object: "JSONB"

# Configuración de límites y umbrales
limits:
  # Longitud máxima para VARCHAR antes de usar TEXT
  varchar_to_text_threshold: 1000
  # Longitud por defecto para VARCHAR
  default_varchar_length: 255
  # Precisión por defecto para DECIMAL
  decimal_precision: 15
  decimal_scale: 2

# Configuración de detección de claves primarias
primary_key_detection:
  # Sufijos que indican que un campo es clave primaria
  id_suffixes: ["_id", "Id", "ID"]
  # Nombres exactos que indican clave primaria
  id_names: ["id", "ID", "Id"]
  # Requiere que esté en campos requeridos para ser considerado PK
  require_in_required_fields: true
  # Requiere que haya más de un campo requerido para detectar PK automáticamente
  require_multiple_required_fields: true

# Configuración de formatos especiales
format_mappings:
  date-time: "TIMESTAMP"
  date: "DATE"
  time: "TIME"
  email: "VARCHAR(255)"
  uri: "VARCHAR(500)"
  uuid: "UUID"

# Configuración de validaciones
validation:
  # Tipos JSON válidos
  valid_json_types: ["string", "number", "integer", "boolean", "array", "object", "null"]
  # Motores de base de datos soportados
  supported_engines: ["postgresql"]

# Configuración de nombres de tablas de metadata
metadata_tables:
  schema_versions: "schema_versions"
  pipeline_executions: "metadata.pipeline_executions"
  dataset_versions: "metadata.dataset_versions"

# Configuración de esquemas por defecto
default_schemas:
  postgresql:
    metadata_schema: "metadata"
    data_schema: "gold"