rules:
  # Nivel 1: Validaciones de formato críticas
  - name: payment_id_format_strict
    expr: "payment_id RLIKE '^PAY-[A-Z0-9]{8}-[A-Z0-9]{4}$'"
    on_fail: quarantine
    description: "Payment ID debe seguir formato PAY-XXXXXXXX-XXXX"

  - name: customer_id_format_strict
    expr: "customer_id RLIKE '^CUST-[0-9]{6}$'"
    on_fail: quarantine
    description: "Customer ID debe seguir formato CUST-XXXXXX"

  # Nivel 2: Validaciones de campos requeridos
  - name: critical_fields_not_null
    expr: "payment_id IS NOT NULL AND customer_id IS NOT NULL AND amount IS NOT NULL AND payment_date IS NOT NULL AND merchant_id IS NOT NULL"
    on_fail: quarantine
    description: "Campos críticos no pueden ser nulos"

  - name: payment_id_not_empty
    expr: "payment_id IS NOT NULL AND LENGTH(TRIM(payment_id)) > 0"
    on_fail: quarantine
    description: "Payment ID no puede estar vacío"

  - name: customer_id_not_empty
    expr: "customer_id IS NOT NULL AND LENGTH(TRIM(customer_id)) > 0"
    on_fail: quarantine
    description: "Customer ID no puede estar vacío"

  # Nivel 3: Validaciones de rangos y tipos de datos
  - name: amount_range_validation
    expr: "amount IS NOT NULL AND amount >= 0.01 AND amount <= 1000000"
    on_fail: quarantine
    description: "Monto debe estar entre 0.01 y 1,000,000"

  - name: amount_precision_validation
    expr: "amount IS NULL OR (amount * 100) = CAST((amount * 100) AS BIGINT)"
    on_fail: warn
    description: "Monto debe tener máximo 2 decimales"

  - name: merchant_id_range
    expr: "merchant_id IS NOT NULL AND merchant_id >= 1 AND merchant_id <= 999999"
    on_fail: quarantine
    description: "Merchant ID debe estar entre 1 y 999,999"

  # Nivel 4: Validaciones de listas permitidas
  - name: currency_whitelist
    expr: "currency IS NULL OR currency IN ('USD', 'EUR', 'COP', 'CLP', 'MXN', 'BRL', 'PEN')"
    on_fail: drop
    description: "Moneda debe estar en la lista permitida"

  - name: payment_method_validation
    expr: "payment_method IS NULL OR payment_method IN ('CREDIT_CARD', 'DEBIT_CARD', 'BANK_TRANSFER', 'DIGITAL_WALLET', 'CASH', 'CRYPTOCURRENCY')"
    on_fail: drop
    description: "Método de pago debe estar en la lista permitida"

  - name: status_validation
    expr: "status IS NULL OR status IN ('PENDING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', 'PROCESSING', 'EXPIRED')"
    on_fail: drop
    description: "Estado debe estar en la lista permitida"

  # Nivel 5: Validaciones temporales y de coherencia
  - name: payment_date_not_future
    # expr: "payment_date IS NULL OR payment_date <= current_timestamp()"
    # expr: "payment_date IS NULL OR payment_date <= '2024-01-15 23:59:59'"
    expr: "payment_date IS NULL OR payment_date <= date_sub(current_timestamp(), 1)"
    on_fail: quarantine
    description: "Fecha de pago no puede ser futura"

  - name: payment_date_not_too_old
    expr: "payment_date IS NULL OR payment_date >= '2020-01-01'"
    on_fail: warn
    description: "Fecha de pago no debe ser anterior a 2020"

  - name: updated_at_after_payment_date
    expr: "payment_date IS NULL OR updated_at IS NULL OR updated_at >= payment_date"
    on_fail: warn
    description: "Fecha de actualización debe ser posterior a fecha de pago"

  - name: updated_at_not_future
    expr: "updated_at IS NULL OR updated_at <= current_timestamp()"
    on_fail: warn
    description: "Fecha de actualización no puede ser futura"

  # Nivel 6: Validaciones de formato de referencia
  - name: reference_number_format
    expr: "reference_number_test IS NULL OR LENGTH(TRIM(reference_number_test)) = 0 OR reference_number_test RLIKE '^REF-[A-Z0-9]{12}$'"
    on_fail: quarantine
    description: "Reference number debe seguir formato REF-XXXXXXXXXXXX o estar vacío"

  # Nivel 7: Validaciones de lógica de negocio
  - name: completed_payments_have_positive_amount
    expr: "status != 'COMPLETED' OR (status = 'COMPLETED' AND amount > 0)"
    on_fail: warn
    description: "Pagos completados deben tener monto positivo"

  - name: failed_payments_logic
    expr: "status != 'FAILED' OR (status = 'FAILED' AND amount >= 0)"
    on_fail: warn
    description: "Pagos fallidos pueden tener monto cero o positivo"

  - name: refunded_payments_logic
    expr: "status != 'REFUNDED' OR (status = 'REFUNDED' AND amount > 0)"
    on_fail: warn
    description: "Pagos reembolsados deben tener monto positivo original"

  # Nivel 8: Validaciones de calidad de datos avanzadas
  - name: no_duplicate_payment_ids
    expr: "TRUE"  # Esta validación se maneja en deduplicación
    on_fail: warn
    description: "Payment IDs deben ser únicos (manejado por deduplicación)"

  - name: reasonable_amount_for_currency
    expr: |
      CASE 
        WHEN currency = 'COP' THEN amount <= 500000000  -- 500M COP
        WHEN currency = 'CLP' THEN amount <= 100000000  -- 100M CLP
        WHEN currency IN ('USD', 'EUR') THEN amount <= 1000000  -- 1M USD/EUR
        WHEN currency = 'BRL' THEN amount <= 5000000  -- 5M BRL
        WHEN currency = 'MXN' THEN amount <= 20000000  -- 20M MXN
        WHEN currency = 'PEN' THEN amount <= 4000000  -- 4M PEN
        ELSE TRUE
      END
    on_fail: warn
    description: "Monto debe ser razonable para la moneda especificada"

  # Nivel 9: Validaciones de integridad de datos
  - name: consistent_data_types
    expr: "payment_id IS NOT NULL AND customer_id IS NOT NULL AND amount IS NOT NULL"
    on_fail: quarantine
    description: "Tipos de datos deben ser consistentes después del casting"

  - name: no_suspicious_patterns
    expr: "NOT (payment_id LIKE '%TEST%' OR payment_id LIKE '%INVALID%' OR customer_id LIKE '%INVALID%')"
    on_fail: drop
    description: "Detectar patrones sospechosos en los datos"