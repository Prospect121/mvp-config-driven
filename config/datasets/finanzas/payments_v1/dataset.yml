id: payments_v1

source:
  input_format: csv
  path: "s3a://raw/payments/2025/09/26/*.csv"  # Fecha por defecto del seed script
  options:
    header: "true"
    inferSchema: "true"

standardization:
  timezone: America/Bogota
  rename:
    - { from: customerId, to: customer_id }
  casts:
    - { column: amount, to: "decimal(18,2)", on_error: null }
    - { column: payment_date, to: "timestamp", format_hint: "yyyy-MM-dd[ HH:mm:ss]" }
    - { column: updated_at, to: "timestamp", format_hint: "yyyy-MM-dd[ HH:mm:ss]" }
  defaults:
    - { column: currency, value: "CLP" }
  deduplicate:
    key: [payment_id]
    order_by: [updated_at desc]

quality:
  expectations_ref: config/datasets/finanzas/payments_v1/expectations.yml
  quarantine: s3a://raw/quarantine/payments_v1/

schema:
  ref: config/datasets/finanzas/payments_v1/schema.json
  mode: strict

output:
  silver:
    format: parquet
    path: "s3a://silver/payments_v1/"
    partition_by: [year, month]
    merge_schema: true
    mode: overwrite_dynamic     # <--- activa overwrite dinámico
    partition_from: payment_date

  # Configuración para Gold layer (Base de datos)
  gold:
    enabled: true
    database_config: "config/database.yml"
    environment: "development"  # default, development, production
    
    # Transformaciones específicas del dataset para Gold layer
    # Remover columnas técnicas antes de escribir a Gold
    exclude_columns: ["_run_id", "_ingestion_ts"]
    
    # Optional: Add business-specific columns
    add_columns:
      - { name: "data_source", value: "payments_system", type: "string" }
      - { name: "processed_at", value: "current_timestamp()", type: "timestamp" }
    
    # Reglas de negocio específicas del dataset
    business_rules:
      - { condition: "amount > 0", action: "filter" }
      - { condition: "currency IS NOT NULL", action: "filter" }
      