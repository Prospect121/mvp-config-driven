[project]
name = "mvp-config-driven"
version = "0.2.1"
description = "Config-driven Spark pipeline orchestration"
requires-python = ">=3.10"
dependencies = [
    "typer>=0.9,<0.10",
    "pydantic>=2.8.0",
    "boto3>=1.34.0",
    "s3fs>=2024.2.0",
    "moto>=5.0.0",
]
scripts = { prodi = "datacore.cli:main" }

[project.optional-dependencies]
tests = [
    "pytest>=8.3.3",
    "pytest-cov>=4.1.0",
    "pandas>=2.0.0",
    "pyarrow>=14.0.0",
]
dq = [
    "great-expectations>=0.18.12",
]
delta = [
    "delta-spark>=3.2.0; python_version < \"3.12\"",
]
lineage = [
    "openlineage-python>=1.27.0",
]
dev = [
    "black>=24.10.0",
    "ruff>=0.6.9",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
]

[tool.black]
line-length = 100
skip-string-normalization = true

[tool.ruff]
line-length = 100
select = ["E","F","W","I","C90"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = false
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-q"
pythonpath = ["src"]

[tool.coverage.run]
branch = true
source = ["src/datacore", "src/mvp_config_driven"]

[tool.coverage.report]
fail_under = 60
include = [
    "src/datacore/layers/*",
    "src/datacore/pipeline/*",
    "src/mvp_config_driven/core/*",
]
