name: Build & Test

on:
  push:
    branches:
      - feature/main-codex
  pull_request:
    branches:
      - feature/main-codex

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Enforce absence of legacy artifacts
        run: python tools/audit_cleanup.py --check

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build

      - name: Build wheel
        run: python -m build

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: mvp-config-driven-${{ matrix.python-version }}-wheel
          path: dist/*.whl

      - name: Run tests with coverage
        env:
          PYTHONPATH: src
        run: pytest --cov=src/datacore --cov-report=term-missing

  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run smoke suite
        env:
          PYTHONPATH: src
        run: |
          set -o pipefail
          bash scripts/smoke_layers.sh 2>&1 | tee smoke.log

      - name: Upload smoke logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-logs
          path: smoke.log

  smoke-prod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Validate production configs (forced dry-run)
        env:
          PYTHONPATH: src
        run: |
          set -o pipefail
          bash scripts/smoke_prod_configs.sh 2>&1 | tee smoke-prod.log

      - name: Upload production smoke logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-prod-logs
          path: smoke-prod.log
